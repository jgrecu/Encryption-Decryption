type: edu
custom_name: stage5
files:
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.common.FileUtils;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.io.IOException;
    import java.nio.charset.StandardCharsets;
    import java.nio.file.Files;
    import java.nio.file.NoSuchFileException;
    import java.nio.file.Path;
    import java.nio.file.Paths;
    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "in.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&")
                    .addFile("in.txt", "Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hello")
                    .addFile("input.txt", "Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-in", "i.txt",
                        "-out", "output.txt",
                        "-mode", "enc"
                    )
                    .setAttach("123456789")
                    .addFile("i.txt", "012345678"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-in", "input.txt",
                        "-out", "output.txt",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!")
                    .addFile("input.txt", "\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hi")
                    .addFile("input.txt", "Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("111122223333")
                    .addFile("input.txt", "222233334444")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            String fileName = "output.txt";
            String output;

            try {
                Path path = Paths.get(FileUtils.CURRENT_DIR + fileName);
                output = Files.readString(path, StandardCharsets.UTF_8);
            } catch (NoSuchFileException e) {
                return new CheckResult(false, "File output.txt not found!");
            } catch (IOException e) {
                return new CheckResult(false, "Cannot read from file!");
            }

            if (!output.trim().equals(clue.trim())) {
                return new CheckResult(false, "Wrong result in the file!");
            }

            return new CheckResult(true);
        }
    }
  learner_created: false
- name: src/encryptdecrypt/EncryptDecrypt.java
  visible: true
  text: |
    package encryptdecrypt;

    public class EncryptDecrypt {
        //private final String str = "abcdefghijklmnopqrstuvwxyz";

    //    public String encryptText(String input) {
    //        StringBuilder sb = new StringBuilder();
    //        for (int i = 0; i < input.length(); i++) {
    //            if (input.charAt(i) >= 'a' && input.charAt(i) <= 'z') {
    //                char letter = (char) (122 - input.charAt(i) + 97);
    //                sb.append(letter);
    //            } else {
    //                sb.append(input.charAt(i));
    //            }
    //        }
    //        return sb.toString();
    //    }

        public String processText(String inputText, int key, String process) {
            switch (process) {
                case "enc":
                    return encryptText(inputText, key);
                case "dec":
                    return decryptText(inputText, key);
                default:
                    return null;
            }
        }
        public String encryptText(String input, int key) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < input.length(); i++) {
                char letter = input.charAt(i);
                char encLetter = (char) (letter + key);
                sb.append(encLetter);
            }
            return sb.toString();
        }

        public String decryptText(String input, int key) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < input.length(); i++) {
                char letter = input.charAt(i);
                char decLetter = (char) (letter - key);
                sb.append(decLetter);
            }
            return sb.toString();
        }
    }
  learner_created: true
- name: output.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/249/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Fri, 17 Sep 2021 11:17:08 UTC
record: 5
